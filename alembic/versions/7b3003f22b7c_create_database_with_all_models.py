"""Create database with all models

Revision ID: 7b3003f22b7c
Revises: 
Create Date: 2025-02-14 15:31:43.902422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7b3003f22b7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keyword',
    sa.Column('word', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('word')
    )
    op.create_table('stopword',
    sa.Column('word', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('word')
    )
    op.create_table('user',
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('surname', sa.String(length=50), nullable=True),
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('tg_username', sa.String(length=50), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('role_is_admin', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.CheckConstraint('tg_id > 0', name='Positive tg_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_id'),
    sa.UniqueConstraint('tg_username')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('stopword')
    op.drop_table('keyword')
    # ### end Alembic commands ###
